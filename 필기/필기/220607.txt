<오늘의 수업>
package / default 접근제한자, arrays

--------------------------------------------------------------------------------------------------
● package : 폴더 디렉토리, 관련있는 클래스끼리 분류해서 폴더 구조로 정리함
		관련있는 클래스나 인터페이스들을 묶은 것
- 인터페이스 : 클래스처럼 객체를 나타내고 싶을 때 사용
▶ class 파일들은 default package가 아닌 package별로 분류해서 저장하는 것이 올바름
- + : 같은 이름의 클래스라고 하더라도 다른 패키지에 있으면 문제x, 패키지별로 접근에 제약을 가할 수 있음

▶ 생성방법
① src에 package에 만들기
② 이름은 소문자
-> package안에 만든 class 파일은 위에 package 패키지명; 으로 기록되어있음(없거나 이름 잘못돼있는 경우 compile error)
③ 패키지 안에 패키지 만들기
패키지명.안에 들어갈 패키지명으로 저장
-> 패키지명은 import보다도 더 위, 소스파일 가장 위에 써져있어야함
-> package>package안에 만든 class 파일은 위에 package 패키지명.패키지명; 으로 기록되어있음(없거나 이름 잘못돼있는 경우 compile error)
▶ class 참조
패키지 안의 패키지에 들어있는 class를 instance로 참조하려면 위치를 지정해주고 불러와야 사용 가능 -> import 패키지명.클래스명;
④ 파일 넣고 싶으면 소스파일 제일 윗줄에 패키지 정의하는 문장 기록 - package 패키지명;
▶ 패키지 이름 짓기
① 소문자만을 사용
② 인터넷 도메인 이름의 역순 

* 접근제한자 : public, private ...
▷ default 접근제한자(= package access modifier)
-ex. int test (앞에 아무것도 안붙어 있음)
: 외부에서 접근이 가능하나, 같은 패키지에 있을 때만 접근이 가능
- default 접근제한자는 상위 package에서 호출 불가

-> private로 기본설정을 해두고, 목적에 맞게(package에서 사용되어야 하는지 등) 범위를 넓혀가면 됨
private는 대부분 상수, default는 관련있는 친구들끼리 값을 공유해야할 때

p. 223~
● 배열(arrays) : 같은 타입의 변수들의 모임
- 하나의 변수로 여러 개를 동적으로 사용 가능, 여러 개를 하나의 이름으로 사용
-여러 개를 만들면 1박스에 그 개수만큼의 공간을 만들어줌
-칸 별로 순서를 가지고 이용함, 0부터 시작해서 하나씩 셈
▶ length(길이) : 칸의 개수
▶ index(순서) : 0부터 시작해서 순서 셈(길이 n개면 마지막 index는 n-1)
▶ 배열 선언과 초기화 
ex. 
int[] aBox; // 정수형 배열 변수 선언.
aBox = new int[4]; // 길이가 4인 배열 초기화
▶ 배열에 값 담기
① aBox[0]  = 56;
② 한번에 값 담기 -> double[] myArr = new double[] {1.02, 0.03, 4.0}; or double[] myArr = {1.02, 0.03, 4.0};
	길이값은 지정하면 compile error 나고 자동으로 설정해주므로

- java 배열은 초기화시 정해둔 길이값은 상수이므로 변경 불가(final field)
- 배열은 반복문과 짝처럼 같이 다님

