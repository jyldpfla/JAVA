● GROUP
집단을 나눠서 분류해서 집계 값을 구하기 위해 
- 중복 제거를 위해 사용할 수도 있음 EX. SELECT JOB_ID FROM employees GROUP BY JOB_ID; -- 중복 제거

● Mysql 명령어
1. GROUP BY 컬럼명 : 컬럼명의 같은 값을 가진 것들끼리 그룹화
- HAVING : GROUP지은 것에 조건을 줄 때
2. DISTINCT : 컬럼 값들이 행이 완벽하게 똑같아야 중복 제거
- GROUP BY 중복제거와 다른 점: 그룹화해서 중복 제거시 하나의 그룹으로 묶여지므로, 컬럼에 해당하는 행값이 완벽하게 똑같지 않아도 하나만 나옴
3. TRIM(문자열) : 양쪽 공백 제거
4. LOWER(문자열) / UPPER(문자열) : 대소문자로 전환
5. REVERSE(문자열) : 거꾸로
6. CONCAT(문자열1, 문자열2, 문자열3) : 문자열1문자열2문자열3
- NULL값 하나라도 있으면 NULL으로 출력
7. CHAR_LENGTH : 문자열길이
8. REPLACE(문자열, 문자열에서바꾸고자하는문자열, 바꿀문자열); : 문자바꾸기
- 숫자넣어도 MYSQL에서는 문자열로 변환
9. SUBSTRING('문자열', 자를시작위치) / SUBSTRING('문자열', 자를시작위치, 개수)
- 문자열 셀 때 1부터 숫자 시작
- 자를 시작 위치 음수일 경우 오른쪽에서부터 위치를 세어나감
10. LPAD(문자열, 숫자, 문자) / RPAD(문자열, 숫자, 문자) : 문자열 왼쪽/ 오른쪽에 문자를 채워 숫자만큼의 길이를 맞춰줌
11. REPEAT(문자열, 숫자) : 문자열을 숫자만큼 반복
12. LOCATE(찾을문자열, 문자열) / LOCATE(찾을문자열, 문자열, 숫자): 문자열에서 찾을문자열의 위치를 알려줌 / 찾을문자열중 몇번째 문자열 위치를 알려줄지 숫자로 지정(같은 문자열 여러개일때)
- 문자 순서 1부터 셈
---------------------------------여기서부턴 숫자, 위 문자
13. RAND() : 랜덤숫자
14. ROUND(숫자, 숫자2) : 숫자2만큼 소수점자리 잘라줌
15. FLOOR(숫자) : 숫자 내림
16. CEIL(숫자): 숫자올림
17. ABS(숫자) : 절대값
18. POW(숫자1, 숫자2) :숫자1의 숫자2제곱
19. PI() : 파이숫자 
* -- 주사위 1~6 사이의 난수 생성 -> SELECT CEIL(RAND() * 6);
 * MYSQL FUNCTIONS 검색하묜 나왕
--------------------------------날짜 : "", ''로 문자열로 써주깅
20. CURRENT_DATE(): 현날짜
21. CURRENT_TIME(): 현시간
22. CURRENT_TIMESTAMP() : 현날짜 현시간
23. DATE '년/월/일' : 날짜 설정 (/대신 -도 가능(다른거도 돼~), MYSQL에서 알아서 날짜로 인식)
    TIME'시:분:초' : 시간 설정
- MYSQL은 비교 기준이 날짜면 그에 맞춰 문자열을 자동으로 날짜로 인식
24. ADDDATE(날짜, 숫자) : 수만큼의 일수 더하기 / DATE_ADD(날짜, INTERVAL 숫자 기간표현단위);
- 기간표현단위 : DAY, MONTH, YEAR
25. SUBDATE(날짜, 숫자) : 수만큼의 일자 빼기 / DATE_SUB(날짜, INTERVAL 숫자 기간표현단위);
- SELECT '1987-06-01' + INTERVAL 1 DAY; 이런식으로 기간표현으로 써주면 합연산도 가능
26. DAYOFWEEK(날짜) : 요일(일요일 = 1)
27. EXTRACT(기간표현단위 FROM 날짜) : 날짜 원소 추출
28. DATEDIFF(날짜1, 날짜2) : 날짜 차이
29. STR_TO_DATE() / DATE_FORMAT() : 문자열을 날짜로, 날짜를 문자로
- EX. SELECT STR_TO_DATE('2021/06/13', '%Y/%m/%d');  SELECT DATE_FORMAT(DATE '2021-06-13', '%Y-%m-%d');
- 서식문자 : %Y/%m/%d -> 요런식! / 서식문자는 sql마다 표현방식에 차이 o
-------------------- 형변환
30. CAST(자료형 AS 바꾸려는 자료형) / CONVERT(자료형, 바꾸려는자료형) : 형변환
-------------
31. CASE WHEN(조건식) THEN(참일 경우 실행) ELSE(거짓일 경우 실행) END: IF문 같은 존재, end는 case문 끝났음을 알려줌
32. ifnull(문자열1, 문자열2) : 문자열1이 null이면 문자열 2를 출력, 아니면 1출력
    coalesce(문자열1, 문자열2, 문자열3) : 위 ifnull은 3개 이상부터 ifnull(ifnull(문자열1,문자열2),문자열3)이렇게 써줘야하는데 그 귀찮음을 덜어주는 같은 메소드
33. nullif(문자열1, 문자열2) : 문자열1과 2과 같으면 null을, 아니면 문자열 1을 보여줌
24. 테이블 컬럼명시 끝나고 PRIMARY KEY(컬럼명) : PK 설정 방법2

● 테이블 몽키스패너 모양
- 키설정, 기본값설정, 타입설정등을 조정 가능
- 기본값(default) 설정 가능
- 테이블만들기도 가능

● 인덱스 : 찾기 쉽게 하기 위해 만들어 둔 색인
- 정렬가능
- 사용하는 테이블의 몽키스패너 - indexes => 정렬을 통해 이진검색등이 가능하므로
▶ pk는 인덱스의 역할을 하기 때문에 검색에 있어서 색인효과를 통해 쉽고 빠른 검색이 가능
▶ unique도 고유한 값을 가지므로 검색하기 쉽고 빠름
▶ pk는 두개 이상 설정 가능
- pk 값이 모두 동일할 때만 중복으로 처리
- pk가 첫 번째 설정 기준으로 정렬한 후에 두 번째 것이 설정되어 정렬됨

● 라이브러리 배포
-> eclips에서 프로젝트 우클릭 - properties - java build path - library - add external jars - jar파일 추가 apply하면 referenced library생김, 그 안에 클래스들 사용 가능
- 라이브러리 받아오면 의존성이 생김 -> 내 프로젝트에 referenced library가 있어야만 동작이 가능

● 'jdbc driver'
: JBBC 인터페이스 구현한 클래스들을 라이브러리 형태(jar)로 배포 => 'jdbc driver'
java에 추가해서 db조작 가능
▶ C:\Program Files (x86)\MySQL\Connector J 8.0에 jar 파일 있음 없으면 mysqldriver검색해서 다운후 사용(우리가 다운받은 20ver위로)
▷ my sql과 연결
① C:\Program Files (x86)\MySQL\Connector J 8.0에 jar 파일 있음 없으면 mysqldriver검색해서 다운후 사용(우리가 다운받은 20ver위로) 이 파일 사용할 프로젝트에 라이브러리배포
② url로 접근하고 싶은 db 접근 + id랑 pw필요
		String url = "jdbc:mysql://localhost:3306/";
		// url 써서 접근하고 싶은 db 사용
		String id ="root";
		String password = "root";
**********220714-03 폴더로 체크********

* db 연습하려면 sqlzoo 사이트 참고
