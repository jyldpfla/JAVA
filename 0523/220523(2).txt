if문
- then절, else문이 한문장일 경우 중괄호가 생략 가능하지만 헷갈리지 않기 위해 추가 하도록 추천
(중괄호 없는 상태에서 여러 문장일 경우 else문 바깥의 문장으로 인식함)

● ? 삼항연산자
: ? 옆에 :로 나뉘어져있는 값들을 true면 왼쪽, false면 오른쪽 값을 출력
- 두 개중에 하나
-if 문을 간단히 쓸 때, 간단한 값 출력할 때
-일반적인 문장 표현은 if/else문 사용, 값을 출력할 때 간단히 사용하기 좋음
-ex. int result = (con) ? 100 : -100;

● 반복문 Loop
▶ 반복 -> n번, 시간을 정해두고, ~할 때 반복해라 등의 명령 줄 수 있음

1) while (조건식) {}
- 조건이 충족돼서 ~할 때까지 반복하고 싶을 때는 주로 while문을 사용
: 조건식이 true면 {}수행, 중괄호 끝을 만나면 다시 조건식을 검사하러 돌아와서 true면 계속 반복 수행, 조건식이 false일 때 멈추고 중괄호 뒤 바깥부분 실행
-> 조건식이 true였다가 false로 변경돼서 원하는 만큼만 실행되도록 조건식이 바뀌도록 해야함
▷ 조건 주는 법
① int i = 0;으로 변수 생성 , i값 1씩 증가(i++), 조건문에 원하는 횟수보다 변수가 크지 않도록 조건 부여 (i < n)

* ctrl + c : console 멈춤

2) for (변수 선언 + 초기화;조건식;증감식) {명령문}
- 숫자를 세서 몇 번을 반복하고 싶을 때는 주로 for문 사용
- 모든 부분이 다 채워져있을 필요 없이 ()가 다 비어있어도 실행됨
① 조건식이 비어져있으면 true로 판단
② 이미 사용하고 있는 변수가 있어서 선언이 필요없을 경우에 선언할 필요x
③ 증감식이 없어도 반복되지만, 계속 true로 판단되므로 무한 반복
▶ for문 만의 특징
① for문 안에서 선언된 변수는 for문 종료되면 지역변수 바깥이므로 바깥의 범위에서 변수 사용할 수 없음
▷ ()은 ;로 구분
▷ 조건식이 true면 {}안으로 들어감, 중괄호 실행 후 괄호 제일 마지막 증감식 부분으로 돌아감, 증감식으로 돌아간 뒤에 다시 조건식으로 돌아가서 반복, 조건식이 false가 됐을 때 for문은 종료되고 순차적으로 진행됨



