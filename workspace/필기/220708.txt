<파일 입출력>
● 파일:
드라이브라는 기록을 남기는 저장 장치에 남겨진 기록물(내용들을 가짐)
▶ 이름.확장자(내용의 서식, 세글자)
- 위치(드라이브, 폴더 등)와 내용물을 가짐
- 각각의 고유한 이름을 가짐 -> 중복 불가 but 드라이브나 폴더가 다르면 구분 가능하므로 이름 같아도 ok
- 폴더 - 보기 : 자세히 -> 파일확장자까지 확인 가능

▷ 드라이브 : 하드디스크라는 물리적 장치 하나, 논리적으로도 나눌 수 있음
- 폴더(directory) : 기록물 관리, 분류를 위한 이름만 존재하는 분류


▷ 외부에 있는 자원 가지고 오기
- d드라이브 : d:
- 폴더 안 : \\ (java에서는 \표시 위해선 2번 써야하므로)
① 절대적인 경로
	- ex. File f2 = new File("d:\\Java\\asdf.txt");
- . : 현재경로 = 프로젝트의 경로 -> 상대적인 경로
- ..\\ : 상위 경로를 나타냄, 한 단계 위로 (부모경로) -> 상대적인 경로
② 상대적인 경로
: 내 기준으로 찾아가므로
	- ex. File file = new File(".\\");
- 파일뿐만 아니라 디렉토리도 가져 올 수 있음
	-> 두가지 구분 메소드 ① isFile() ② isDirectory() 

▷ 자원표시 
URL - 경로구분 : /

▷ inputstream : 파일에 빨대를 꽂아서 안 내용을 쭉 가져올 수 있도록 함
① Scanner 
- 자원해제 : inputstream은 수행하려는 일이 끝나도 계속 있으므로 제거해줘야함

● stream : 순서가 있는 데이터의 연속적인 흐름
- 방향성을 가짐(입력 스트림, 출력 스트림)
	- ex. Sysetm.in / System.out
- 소스(데이터 생성), 목적지(데이터 소비)를 가짐
▶ 데이터 종류 별로 구분 가능 -> 바이트 스트림(바이트단위로 입출력), 문자 스트림

▷ 데이터 포맷 
: 데이터의 형식을 정해놔야 데이터 찾기, 수정등에 용이하므로 형식을 맞춰두는 것
- 포맷ex. csv(,로 데이터 구별)

▷ 줄 단위의 입출력 - BufferedReader / PrintWriter
- flush()