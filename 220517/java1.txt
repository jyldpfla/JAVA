자원(만들어진 화면)을 웹서버로 제공하면 사용자가 볼 수 있게 됨

● 컴퓨터 프로그래밍 언어: 자바(Java)
정적 자원을 동적으로 변화시킴
컴파일 언어 - 미리 소스코드를 작성하고, 실행 전에 번역, 번역 후 실행
스크립트 언어 - 코드를 바로 실행, 코드를 때마다 바로 번역

→ java 컴파일 안하면 컴파일 

● 프로그램
: 어떠한 진행 흐름에 따라 순차적으로 진행하는 것
● 프로그래밍 
: 프로그램을 짜는 것, 이를 통해 만들어진 것을 소프트웨어라고 함
● 언어
전기 흐름을 숫자로 표현(이진법), 0/1 + 논리적인 연산을 통해 모든 것을 표현
저급 언어에서 고급 언어로 발전
- 번역기 : 저급언어와 고급언어를 번역, 영문자(라틴어)를 대개 사용
- 저급 언어 : 기계에 가까운 숫자로 표현한 언어
- 고급 언어 : 인간이 좀 더 친화적으로 사용가능한 언어(java,c#,C++)

작성: 메모장, 번역: 컴파일/도구: 컴파일러(Compiler)
실행-실행 환경: Runtime Environment

● JVM (Java Virtual Machine)
: 작성한 코드를 번역한 이후 동작들을 읽어서 각 컴퓨터에 맞게 서로 다른 동작 방식으로 실행 시켜줌 
- JVM이 동작 가능한  컴퓨터면 같은 프로그램을 사용 가능(이식성이 높음)

● Command
-notepad: 메모장, mspaint: 그림판

(1) cd : change directory
-cd.. : 한단계 위로
-cd 폴더명 : 폴더로 들어갈 수 있음
-cd\ : 가장 위 폴더로 한 번에 이동

(2) dir : 폴더명을 찾을 때, 파일과 폴더 목록 확인 가능

(3) d: : d폴더로 이동
(4)mkdir 이름 : 폴더 생성
(5) notepad 파일명: 메모 파일 생성
(6) javac 파일명 : 원하는 파일 번역 → 파일이 생김
(7) java Hello : Hello World 출력


● 시스템 환경 변수
path 원하는 곳으로 이동하는 명령 바로 지정 가능
-환경변수에서 원하는 path 지정하고 명령중 path에서 path이름 넣어주기


● GUI, Command Line Interface(CLI)
1) GUI : 그래픽 기반 user interface
2) CLI : 명령어로 제어


<책 공부 주요파트>
*java의 버전이 변경되면 추가되는 부분, 삭제되는 부분 유의깊게 확인해서 알아두기
실무에서 최신버전을 사용하지 않는 이유 : error의 여지가 많기 때문에
*jvm덕에 어느 환경에서든 실행가능하다는걸 기억하래요!
12p 객체지향언어
15p 
se: standard edtition
me: mobile
ee: enterprise → will do...
21p 
java.sun 아니고 oracle이래..☆
JRE JDK - 개발자는 두개 다 필요
29p
통합개발환경 - eclipse, intellij?
----------------------------------------------------------------------------------------------
*확장자명 : 파일을 나타내줌 
*파일명 = class(단위) 이름

1byte  = 8bit

컴퓨터는 8bit의 이진법 숫자에 대응해 문자를 읽음(=문자인코딩)
ASCll : 미국정보교환표준부호
유니코드: 전세계의 모든 문자를 컴에서 일관되게 표현할 수 있음

절차수행: 절차대로 수행되는것 , java가 절차적인 프로그래밍

연산자 : +
-문자열 : 문자끼리 결합
-숫자 : 덧셈
-문자,숫자 : 결합됨( -,/는 문법에 어긋나서 컴파일에서 번역 안해줌)

메소드 : 기능, 명령을 통해 행동하게 하는 것
호출 : 동작을 하게끔 이름을 그대로 불러주는 것

\n : 하나의 문자로 취급, 줄바꿈을 해주는 문자

변수 : 기억을 위한 공간

연산자의 순서 : java는 *가 먼저 실행, +가 그후에 연산자로 적용됨, ()가 먼저 적용
-수학 연산자 순서랑 똑같음
